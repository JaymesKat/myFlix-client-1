{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashle\\\\Documents\\\\myFlix-client\\\\src\\\\components\\\\main-view\\\\main-view.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { MovieCard } from \"../movie-card/movie-card\"; // Import MovieCard\nimport { MovieView } from \"../movie-view/movie-view\"; // Import MovieView for detailed view\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainView = () => {\n  _s();\n  const [movies, setMovies] = useState([]); // Correct: Initialize with an empty array\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  // Fetch movies from the Open Library API\n  useEffect(() => {\n    fetch(\"https://openlibrary.org/search.json?q=inception\").then(response => response.json()).then(data => {\n      const moviesFromApi = data.docs.map(doc => {\n        var _doc$author_name;\n        return {\n          id: doc.key,\n          // Use the correct key from the API response\n          title: doc.title,\n          image: `https://covers.openlibrary.org/b/id/${doc.cover_i}-L.jpg`,\n          author: (_doc$author_name = doc.author_name) === null || _doc$author_name === void 0 ? void 0 : _doc$author_name[0] // Use optional chaining in case author_name is undefined\n        };\n      });\n      setMovies(moviesFromApi); // Correct: Set the state for movies\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n    });\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  // If a movie is selected, render MovieView\n  if (selectedMovie) {\n    return /*#__PURE__*/_jsxDEV(MovieView, {\n      movie: selectedMovie,\n      onBack: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render MovieCard components for each movie\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie,\n      onClick: () => setSelectedMovie(movie)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MainView, \"PO+XgOji7E32nFJj3H5UPLPJ7w4=\");\n_c = MainView;\nvar _c;\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"names":["useState","useEffect","MovieCard","MovieView","jsxDEV","_jsxDEV","MainView","_s","movies","setMovies","selectedMovie","setSelectedMovie","fetch","then","response","json","data","moviesFromApi","docs","map","doc","_doc$author_name","id","key","title","image","cover_i","author","author_name","catch","error","console","movie","onBack","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ashle/Documents/myFlix-client/src/components/main-view/main-view.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { MovieCard } from \"../movie-card/movie-card\"; // Import MovieCard\r\nimport { MovieView } from \"../movie-view/movie-view\"; // Import MovieView for detailed view\r\n\r\nexport const MainView = () => {\r\n  const [movies, setMovies] = useState([]); // Correct: Initialize with an empty array\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n  // Fetch movies from the Open Library API\r\n  useEffect(() => {\r\n    fetch(\"https://openlibrary.org/search.json?q=inception\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const moviesFromApi = data.docs.map((doc) => {\r\n          return {\r\n            id: doc.key, // Use the correct key from the API response\r\n            title: doc.title,\r\n            image: `https://covers.openlibrary.org/b/id/${doc.cover_i}-L.jpg`,\r\n            author: doc.author_name?.[0] // Use optional chaining in case author_name is undefined\r\n          };\r\n        });\r\n\r\n        setMovies(moviesFromApi); // Correct: Set the state for movies\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching movies:', error);\r\n      });\r\n  }, []); // Empty dependency array ensures useEffect runs only once\r\n\r\n  // If a movie is selected, render MovieView\r\n  if (selectedMovie) {\r\n    return <MovieView movie={selectedMovie} onBack={() => setSelectedMovie(null)} />;\r\n  }\r\n\r\n  // Render MovieCard components for each movie\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie.id} movie={movie} onClick={() => setSelectedMovie(movie)} />\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,0BAA0B,CAAC,CAAC;AACtD,SAASC,SAAS,QAAQ,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,iDAAiD,CAAC,CACrDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,aAAa,GAAGD,IAAI,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAK;QAAA,IAAAC,gBAAA;QAC3C,OAAO;UACLC,EAAE,EAAEF,GAAG,CAACG,GAAG;UAAE;UACbC,KAAK,EAAEJ,GAAG,CAACI,KAAK;UAChBC,KAAK,EAAE,uCAAuCL,GAAG,CAACM,OAAO,QAAQ;UACjEC,MAAM,GAAAN,gBAAA,GAAED,GAAG,CAACQ,WAAW,cAAAP,gBAAA,uBAAfA,gBAAA,CAAkB,CAAC,CAAC,CAAC;QAC/B,CAAC;MACH,CAAC,CAAC;MAEFZ,SAAS,CAACQ,aAAa,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAIpB,aAAa,EAAE;IACjB,oBAAOL,OAAA,CAACF,SAAS;MAAC6B,KAAK,EAAEtB,aAAc;MAACuB,MAAM,EAAEA,CAAA,KAAMtB,gBAAgB,CAAC,IAAI;IAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClF;;EAEA;EACA,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxB/B,MAAM,CAACW,GAAG,CAAEa,KAAK,iBAChB3B,OAAA,CAACH,SAAS;MAAgB8B,KAAK,EAAEA,KAAM;MAACQ,OAAO,EAAEA,CAAA,KAAM7B,gBAAgB,CAACqB,KAAK;IAAE,GAA/DA,KAAK,CAACV,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyD,CAClF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtCWD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}