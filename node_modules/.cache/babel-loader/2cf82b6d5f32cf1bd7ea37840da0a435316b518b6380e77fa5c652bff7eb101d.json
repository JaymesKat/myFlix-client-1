{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashle\\\\Documents\\\\myFlix-client\\\\src\\\\components\\\\main-view\\\\main-view.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { MovieCard } from \"../movie-card/movie-card\"; // Import MovieCard\nimport { MovieView } from \"../movie-view/movie-view\"; // Import MovieView for detailed view\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainView = () => {\n  _s();\n  const [movies, setMovies] = useState([{\n    _id: '66cc9adde6dc7e6bb62710bc',\n    Title: 'Inception',\n    Description: 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.',\n    Genre: {\n      Name: 'Sci-Fi',\n      Description: 'Sci-Fi films often explore futuristic settings, advanced technology, space exploration, time travel, and extraterrestrial life.'\n    },\n    Director: {\n      Name: 'Christopher Nolan',\n      Bio: 'British-American filmmaker known for his complex storytelling and visual style.',\n      Birth: '1970',\n      Death: null\n    },\n    ImagePath: 'https://m.media-amazon.com/images/I/91kFYg4fX3L._AC_SY679_.jpg',\n    Featured: true\n  }, {\n    _id: '66ccc690e6dc7e6bb62710bd',\n    Title: 'Interstellar',\n    Description: \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.\",\n    Genre: {\n      Name: 'Sci-Fi',\n      Description: 'Sci-Fi films often explore futuristic settings, advanced technology, space exploration, time travel, and extraterrestrial life.'\n    },\n    Director: {\n      Name: 'Christopher Nolan',\n      Bio: 'British-American filmmaker known for his complex storytelling and visual style.',\n      Birth: '1970',\n      Death: null\n    },\n    ImagePath: 'https://m.media-amazon.com/images/I/71qGcH5CDBL._AC_SY679_.jpg',\n    Featured: true\n  }\n  // Add other movies here\n  ]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  // If a movie is selected, render MovieView\n  if (selectedMovie) {\n    return /*#__PURE__*/_jsxDEV(MovieView, {\n      movie: selectedMovie,\n      onBack: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render MovieCard components for each movie\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie,\n      onClick: () => setSelectedMovie(movie)\n    }, movie._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MainView, \"KtkpJf5Ivz9sjeuoxSm1LTR0vBU=\");\n_c = MainView;\nvar _c;\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"names":["useState","MovieCard","MovieView","jsxDEV","_jsxDEV","MainView","_s","movies","setMovies","_id","Title","Description","Genre","Name","Director","Bio","Birth","Death","ImagePath","Featured","selectedMovie","setSelectedMovie","movie","onBack","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ashle/Documents/myFlix-client/src/components/main-view/main-view.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { MovieCard } from \"../movie-card/movie-card\"; // Import MovieCard\r\nimport { MovieView } from \"../movie-view/movie-view\"; // Import MovieView for detailed view\r\n\r\nexport const MainView = () => {\r\n  const [movies, setMovies] = useState([\r\n    {\r\n      _id: '66cc9adde6dc7e6bb62710bc',\r\n      Title: 'Inception',\r\n      Description: 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.',\r\n      Genre: {\r\n        Name: 'Sci-Fi',\r\n        Description: 'Sci-Fi films often explore futuristic settings, advanced technology, space exploration, time travel, and extraterrestrial life.'\r\n      },\r\n      Director: {\r\n        Name: 'Christopher Nolan',\r\n        Bio: 'British-American filmmaker known for his complex storytelling and visual style.',\r\n        Birth: '1970',\r\n        Death: null\r\n      },\r\n      ImagePath: 'https://m.media-amazon.com/images/I/91kFYg4fX3L._AC_SY679_.jpg',\r\n      Featured: true\r\n    },\r\n    {\r\n      _id: '66ccc690e6dc7e6bb62710bd',\r\n      Title: 'Interstellar',\r\n      Description: \"A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.\",\r\n      Genre: {\r\n        Name: 'Sci-Fi',\r\n        Description: 'Sci-Fi films often explore futuristic settings, advanced technology, space exploration, time travel, and extraterrestrial life.'\r\n      },\r\n      Director: {\r\n        Name: 'Christopher Nolan',\r\n        Bio: 'British-American filmmaker known for his complex storytelling and visual style.',\r\n        Birth: '1970',\r\n        Death: null\r\n      },\r\n      ImagePath: 'https://m.media-amazon.com/images/I/71qGcH5CDBL._AC_SY679_.jpg',\r\n      Featured: true\r\n    }\r\n    // Add other movies here\r\n  ]);\r\n\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n  // If a movie is selected, render MovieView\r\n  if (selectedMovie) {\r\n    return <MovieView movie={selectedMovie} onBack={() => setSelectedMovie(null)} />;\r\n  }\r\n\r\n  // Render MovieCard components for each movie\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie._id} movie={movie} onClick={() => setSelectedMovie(movie)} />\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,0BAA0B,CAAC,CAAC;AACtD,SAASC,SAAS,QAAQ,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CACnC;IACES,GAAG,EAAE,0BAA0B;IAC/BC,KAAK,EAAE,WAAW;IAClBC,WAAW,EAAE,0JAA0J;IACvKC,KAAK,EAAE;MACLC,IAAI,EAAE,QAAQ;MACdF,WAAW,EAAE;IACf,CAAC;IACDG,QAAQ,EAAE;MACRD,IAAI,EAAE,mBAAmB;MACzBE,GAAG,EAAE,iFAAiF;MACtFC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;IACT,CAAC;IACDC,SAAS,EAAE,gEAAgE;IAC3EC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEV,GAAG,EAAE,0BAA0B;IAC/BC,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE,qGAAqG;IAClHC,KAAK,EAAE;MACLC,IAAI,EAAE,QAAQ;MACdF,WAAW,EAAE;IACf,CAAC;IACDG,QAAQ,EAAE;MACRD,IAAI,EAAE,mBAAmB;MACzBE,GAAG,EAAE,iFAAiF;MACtFC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;IACT,CAAC;IACDC,SAAS,EAAE,gEAAgE;IAC3EC,QAAQ,EAAE;EACZ;EACA;EAAA,CACD,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,IAAIoB,aAAa,EAAE;IACjB,oBAAOhB,OAAA,CAACF,SAAS;MAACoB,KAAK,EAAEF,aAAc;MAACG,MAAM,EAAEA,CAAA,KAAMF,gBAAgB,CAAC,IAAI;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClF;;EAEA;EACA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBtB,MAAM,CAACuB,GAAG,CAAER,KAAK,iBAChBlB,OAAA,CAACH,SAAS;MAAiBqB,KAAK,EAAEA,KAAM;MAACS,OAAO,EAAEA,CAAA,KAAMV,gBAAgB,CAACC,KAAK;IAAE,GAAhEA,KAAK,CAACb,GAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyD,CACnF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtDWD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}